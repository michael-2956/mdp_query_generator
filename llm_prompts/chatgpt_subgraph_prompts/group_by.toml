[transitions]


[transitions.GROUP_BY]
task="""
You chose to make the query groupped. Now you need to decide whether to include \
the GROUP BY clause itself.

Write down the answer to this question: Will the current query need to treat all of \
the rows in a relation as a single group to satisfy the task description? 
For example: `SELECT SUM(C1) FROM T1` is such a query.
If yes, choose to option to "OMIT the GROUP BY clause and group by a single group"

However, if you indend to group by a specific column(s), choose to add the GROUP BY clause add this step.
"""
[transitions.GROUP_BY.options]
1="OMIT the GROUP BY clause and group by a single group."
2="ADD the GROUP BY clause. You won't be able to group by a single group."
[transitions.GROUP_BY.option_nodes]
1="group_by_single_group"
2="has_accessible_columns"


[transitions.grouping_column_list]
task="""
Select whether you would like to group by a column name \
or by one of CUBE, GROUPING SET, and ROLLUP
"""
[transitions.grouping_column_list.options]
1="Group by a column name"
2="One of CUBE, GROUPING SET, and ROLLUP"
[transitions.grouping_column_list.option_nodes]
1="call1_column_spec"
2="special_grouping"


[transitions.call1_column_spec]
task="""
Select whether you would like to add more \
items to the GROUP BY clause or you would like \
to finish generating the GROUP BY clause.
"""
[transitions.call1_column_spec.options]
1="Add an another item to the GROUP BY clause"
2="Finish the GROUP BY clause generation"
[transitions.call1_column_spec.option_nodes]
1="grouping_column_list"
2="EXIT_GROUP_BY"


[transitions.special_grouping]
task="""
Select which kind of grouping you would like to use.
Note that after this, you will have to generate the \
sets of columns that will go into the selected grouping \
one by one
"""
[transitions.special_grouping.options]
1="ROLLUP"
2="CUBE"
3="GROUPING SET"
[transitions.special_grouping.option_nodes]
1="grouping_rollup"
2="grouping_cube"
3="grouping_set"


[transitions.set_list]
task="""
Select whether you would like to add an empty \
set to your GROUPING SET.
Example:
SELECT FROM T1 GROUP BY GROUPING SETS((C1), ())
Here, () is the empty set and corresponds to grouping \
by a single group.
If you choose to add a column name to the set, it would \
instead look something like this:
SELECT FROM T1 GROUP BY GROUPING SETS((C1))
Here, C1 is the selected column name.
"""
[transitions.set_list.options]
1="Add the empty set: ()"
2="Add a set of columns: ([column], ...) or [column]"
[transitions.set_list.option_nodes]
1="set_list_empty_allowed"
2="call1_set_item"


[transitions.set_list_empty_allowed]
task="""
Select whether you would like to continue generating the \
GROUPING SETS, finish generating it and add an another item \
to the GROUP BY clause, or finish the GROUP BY clause generation.
By continuing to generate the GROUPING SETS, you will add \
an another set to it.
"""
[transitions.set_list_empty_allowed.options]
1="Add an another set to the GROUPING SETS"
2="Finish generating GROUPING SETS, and add an another item to the GROUP BY clause"
3="Finish the GROUP BY clause generation"
[transitions.set_list_empty_allowed.option_nodes]
1="set_list"
2="grouping_column_list"
3="EXIT_GROUP_BY"


[transitions.call1_set_item]
task="""
Select whether you would like to add an another item to the \
current list, add an another item to the GROUP BY clause, or \
finish the GROUP BY clause generation altogether.

1) If you have:
SELECT FROM T1 GROUP BY GROUPING SETS((C1, C2))
But you want:
SELECT FROM T1 GROUP BY GROUPING SETS((C1, C2), [column(s)])
Then select "Add an another item to the current list".

2) If you have:
SELECT FROM T1 GROUP BY GROUPING SETS((C1, C2))
But you want:
SELECT FROM T1 GROUP BY GROUPING SETS((C1, C2)), [column(s)]
Then select "Add an another item to the GROUP BY clause".

3) Otherwise, select "Finish the GROUP BY clause generation"
"""
[transitions.call1_set_item.options]
1="Add an another item to the current list"
2="Finish the GROUP BY clause generation"
3="Add an another item to the GROUP BY clause"
[transitions.call1_set_item.option_nodes]
1="set_list"
2="EXIT_GROUP_BY"
3="grouping_column_list"


[call_node_context]
call1_column_spec="This will be the column that you will be adding to the GROUP BY clause"
call2_column_spec="This will be the column that you will be adding to the current set in the GROUP BY clause"


[value_chooser_tasks]