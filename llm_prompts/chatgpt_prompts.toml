system_prompt="""
You have to create an SQL query that would satisfy \
the provided text request. The request would always be \
indicated by the string "Request:"

You would be also provided with a description of the database \
schema. This description would follow the string "Schema:" \
and would be a list of CREATE TABLE statements.

Instead of creating the query right away, you are constrained \
to choose between the provided options, given the current state \
of the query. The [?] symbol would sometimes suggest the place in \
the query that the result of your decision will affect. An option \
list would be indicated by "Options:" followed by a numbered list \
of options.

Responding to an option list, you should always do the following:
- As the first line of your response, always output the reasoning \
behind your decision. Mention which option you will choose and \
why you won't choose the others. Outline your thinking process \
and future plans.
- As the last line of your response, always output the selected \
option number (and only, exclusively the number), and nothing else.

The option list would be prepended with the task description \
that might understand the option list. This information \
will always be indicated by "Task:"

Sometimes, the option list would be prepended with some context \
that might help make the appropriate decision. This information \
will always be indicated by "Context:"

Sometimes, instead of the option list, you would be tasked with \
generating (choosing) a primitive value (an identifier). In this case, \
the list line of the request would contain "Generate a value of \
type [...]", where [...] would be replaced with a value type (such \
as Integer or Text). In some cases, the request might also look like: \
"Generate [...]" with arbitraty text instead of [...]. In cases when
you'll need to choose an identifier, the request would look like: \
"Choose [...]". In response, you should always do the following: \
- As the first line of your response, always output the reasoning \
behind the value you will be selecting.
- As the last line of your response, always output the selected \
value (and only, exclusively the value), and nothing else.
"""

additional_weights_folder="llm_prompts/chatgpt_subgraph_prompts/"

# [transitions]
# HOW TO ADD THE DECISION PROMPTS:
# [transitions.node]
# task="""
# """
# [transitions.node.options]
# 1=""
# 2=""
# [transitions.node.option_nodes]
# 1=""
# 2=""

# [call_node_context]
# node=""

# [value_chooser_tasks]
# vc_name=""

[transitions.GROUP_BY]
task="""
Choose whether the groupping will be implicit or explicit. Choose option 1 \
if you want to indicate grouping with aggregation, but omit the actual GROUP BY \
clause. Choose option 2 if you want the GROUP BY clause to be explicit.
"""
[transitions.GROUP_BY.options]
1="Add implicit groupping to the query."
2="Add an explicit GROUP BY clause."
[transitions.GROUP_BY.option_nodes]
1="group_by_single_group"
2="has_accessible_columns"




[call_node_context]
call2_types_type="""
Before you start building the left and right hand sides of the \
comparison operation, select the biggest type that would fit both all \
values on the right hand side and the left hand side at the same time.
"""




[value_chooser_tasks]
table_name="Choose Table Name:"
column="Choose Column Name:"
select_alias_order_by="Choose a select alias that you with to place in ORDER BY:"
aggregate_function_name="Choose the name of the aggregate function:"
bigint="Generate a value of type BigInt:"
integer="Generate a value of type Integer:"
numeric="Generate a value of type Numeric:"
text="Generate a value of type Text:"
date="Generate a value of type Date:"
timestamp="Generate the string that would go into the timestamp value:"
interval="Generate the string that would go into the interval value:"
qualified_wildcard_relation="Choose the relation name for the qualified wildcard:"
select_alias="Generate the alias for the SELECT expression:"
from_alias="Generate the alias for the FROM relation:"
from_column_renames="Generate the renames for the FROM relation:"
